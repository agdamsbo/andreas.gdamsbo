{
  "hash": "1db11e86ceb77cc8b5b808a496dff773",
  "result": {
    "markdown": "---\ntitle: \"Package: stRoke\"\ndate: 2023-05-17\nexecute: \n  freeze: true\ndescription: Collection of tools used in stroke research, but widely applicable. \nimage: images/stRokelogo.png\ncategories:\n  - REDCap\n  - Package\n  - R\n  - FOSS\n---\n\n\n## My first package\n\nDuring my early use of *R*, I started to collect my own solutions to problems in an package. At some point I realised that most of the problems were already solved elsewhere and typically more elegantly. I took the best functions and moved them to a new project, the `stRoke`-package.[@stRoke] This package have been used for learning and practising, but it has also been published to CRAN and I will keep including new functions in the package.\n\nThe main goal has been learning, but I also wanted to share my work for others to use or modify.\n\n## Content of the `stRoke` package\n\nThe different functions have been documented in the [package vignette](https://agdamsbo.github.io/stRoke/articles/toolbox.html). Here I will just discuss a few favourite examples.\n\n### Plotting text with contrast based on background\n\nThe first example is just a small exercise in implementing ideas as a function.\n\nInspired by a [discussion on StackOverflow](https://stackoverflow.com/questions/1855884/determine-font-color-based-on-background-color) and [an example](https://stackoverflow.com/a/66669838/21019325), I created a function to determine contrast levels. My use case was colouring text based on background colour, but the function can be used in many other cases as well.\n\nSimilar functionality is used in `Polychrome::swatch()` or `scales::show_col()`, but the function used for determining contrast here is [a little crude](https://github.com/r-lib/scales/blob/b3df2fb6efd5b440377b0699d3830f1082fa3140/R/colour-manip.r#L74). The `contrast_text()` is a little more sophisticated, and can be used on its own. Is it necessary? You'll decide for yourself.\n\n\n::: {.cell}\n\n```{.r .cell-code  code-fold=\"false\" code-summary=\"Demonstrating `win_prob()`\"}\nlibrary(stRoke)\ncontrast_text(c(\"red\",\"yellow\",\"blue\",\"green\",\"purple\", \"orange\",\"white\",\"black\"))\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] \"white\" \"black\" \"white\" \"black\" \"white\" \"white\" \"black\" \"white\"\n```\n:::\n:::\n\n\nTo give an example, I have modified the [`scales::show_col()`](https://github.com/r-lib/scales/blob/b3df2fb6efd5b440377b0699d3830f1082fa3140/R/colour-manip.r#L72-L115).\n\n\n::: {.cell}\n\n```{.r .cell-code  code-summary=\"A modification of the scales::show_col() function to use stRoke::contrast_text() for text coloring.\"}\n## Operator used by library(scales), but not exported\n## Defined for convenience. It is a neat operator.\n`%||%` <- function(a,b){\n  if (is.null(a)) b else a\n}\n\n## Modified color_plot() function\ncolor_plot <-\n  function (colours,\n            labels = TRUE,\n            borders = NULL,\n            cex_label = 1,\n            ncol = NULL,\n            ...)\n  {\n    n <- length(colours)\n    ncol <- ncol %||% ceiling(sqrt(length(colours)))\n    nrow <- ceiling(n / ncol)\n    colours <- c(colours, rep(NA, nrow * ncol - length(colours)))\n    colours <- matrix(colours, ncol = ncol, byrow = TRUE)\n    old <- par(pty = \"s\", mar = c(0, 0, 0, 0))\n    on.exit(par(old))\n    size <- max(dim(colours))\n    plot(\n      c(0, size),\n      c(0, -size),\n      type = \"n\",\n      xlab = \"\",\n      ylab = \"\",\n      axes = FALSE\n    )\n    rect(\n      col(colours) - 1,\n      -row(colours) + 1,\n      col(colours),\n      -row(colours),\n      col = colours,\n      border = borders\n    )\n    if (labels) {\n      label_col <- contrast_text(colours,...)\n      text(col(colours) - 0.5,\n           -row(colours) + 0.5,\n           colours,\n           cex = cex_label,\n           col = label_col)\n    }\n  }\n```\n:::\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code  code-fold=\"false\"}\nlibrary(pals)\npar(bg=NULL)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nnamed list()\n```\n:::\n\n```{.r .cell-code  code-fold=\"false\"}\ncolors <- sample(pals::polychrome(),size = 20)\ncolor_plot(colors,method=\"relative\")\n```\n\n::: {.cell-output-display}\n![Demonstrating the `contrast_text()`](stRoke_files/figure-html/contrast_text-implementation-1.png){fig-align='center' width=480}\n:::\n:::\n\n\nWriting this example, I found some ideas for colouring on [this discussion thread](https://stackoverflow.com/questions/9563711/r-color-palettes-for-many-data-classes).\n\n### Analysing modified Rankin Scale (mRS) scores\n\nI believe, that the analysis of mRS scores is a key discipline in clinical stroke research, as this measure of functional outcome has been a favourite for major stroke trials.\n\nOverall, the mRS has been analysed in a dichotomised fashion with different cutoffs and using ordinal logistic regression. Most recently a new approach has gained some traction: \"Tournament Methods\".[@churilov]\n\n#### `win_prob()`\n\nThis approach has been implemented in the `genodds`-package[@genodds], and based on the work by @zou2022, I have created the `win_prob()` function:\n\n\n::: {.cell}\n\n```{.r .cell-code  code-fold=\"false\" code-summary=\"Demonstrating `win_prob()`\"}\nlibrary(stRoke)\nwin_prob(\n  data = stRoke::talos,\n  response = \"mrs_6\",\n  group = \"rtreat\",\n  sample.size = FALSE,\n  print.tables = FALSE\n)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n\t Zou et al's winP (doi: 10.1161/STROKEAHA.121.037744) \n\nProbability of a random observation in Placebo group \n      will have a higher response score than a random\n      observation in Active group:\n\n  \t   winP: 0.400 (0.612, 0.372)      p=0.0125\n--------------------------------------------\n\nThe numbers needed to treat (NNT) are: -9\n```\n:::\n:::\n\n\n#### `generic_stroke()`\n\nThe author of the `genodds`-package is also maintaining the `rankinPlot`-package, which makes it very easy to create the classic Grotta Bars visualising changes in mRS score distributions.[@rankinPlot]\n\nI have created the `generic_stroke()`-function to easily create table one, Grotta bars and binary or ordinal logistic regression plots with confidence intervals.\n\n\n::: {.cell}\n\n```{.r .cell-code  code-fold=\"false\"}\nlibrary(stRoke)\nlst <- generic_stroke(df = talos,\n               \"rtreat\",\n               \"mrs_6\",\n               variables = c(\"hypertension\", \"diabetes\", \"civil\"))\n# names(lst)\n```\n:::\n\n\nThe first element in the function is a classical table 1 created using the great package `gtsummary`[@gtsummary] using `tbl_summary()`:\n\n\n::: {.cell}\n\n```{.r .cell-code  code-summary=\"Printing Table 1\"}\nlibrary(gtsummary)\nlst$`Table 1` |> as_gt()\n```\n\n::: {.cell-output-display}\n```{=html}\n<div id=\"rguwpchrdi\" style=\"padding-left:0px;padding-right:0px;padding-top:10px;padding-bottom:10px;overflow-x:auto;overflow-y:auto;width:auto;height:auto;\">\n<style>#rguwpchrdi table {\n  font-family: system-ui, 'Segoe UI', Roboto, Helvetica, Arial, sans-serif, 'Apple Color Emoji', 'Segoe UI Emoji', 'Segoe UI Symbol', 'Noto Color Emoji';\n  -webkit-font-smoothing: antialiased;\n  -moz-osx-font-smoothing: grayscale;\n}\n\n#rguwpchrdi thead, #rguwpchrdi tbody, #rguwpchrdi tfoot, #rguwpchrdi tr, #rguwpchrdi td, #rguwpchrdi th {\n  border-style: none;\n}\n\n#rguwpchrdi p {\n  margin: 0;\n  padding: 0;\n}\n\n#rguwpchrdi .gt_table {\n  display: table;\n  border-collapse: collapse;\n  line-height: normal;\n  margin-left: auto;\n  margin-right: auto;\n  color: #333333;\n  font-size: 16px;\n  font-weight: normal;\n  font-style: normal;\n  background-color: #FFFFFF;\n  width: auto;\n  border-top-style: solid;\n  border-top-width: 2px;\n  border-top-color: #A8A8A8;\n  border-right-style: none;\n  border-right-width: 2px;\n  border-right-color: #D3D3D3;\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #A8A8A8;\n  border-left-style: none;\n  border-left-width: 2px;\n  border-left-color: #D3D3D3;\n}\n\n#rguwpchrdi .gt_caption {\n  padding-top: 4px;\n  padding-bottom: 4px;\n}\n\n#rguwpchrdi .gt_title {\n  color: #333333;\n  font-size: 125%;\n  font-weight: initial;\n  padding-top: 4px;\n  padding-bottom: 4px;\n  padding-left: 5px;\n  padding-right: 5px;\n  border-bottom-color: #FFFFFF;\n  border-bottom-width: 0;\n}\n\n#rguwpchrdi .gt_subtitle {\n  color: #333333;\n  font-size: 85%;\n  font-weight: initial;\n  padding-top: 3px;\n  padding-bottom: 5px;\n  padding-left: 5px;\n  padding-right: 5px;\n  border-top-color: #FFFFFF;\n  border-top-width: 0;\n}\n\n#rguwpchrdi .gt_heading {\n  background-color: #FFFFFF;\n  text-align: center;\n  border-bottom-color: #FFFFFF;\n  border-left-style: none;\n  border-left-width: 1px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 1px;\n  border-right-color: #D3D3D3;\n}\n\n#rguwpchrdi .gt_bottom_border {\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n}\n\n#rguwpchrdi .gt_col_headings {\n  border-top-style: solid;\n  border-top-width: 2px;\n  border-top-color: #D3D3D3;\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n  border-left-style: none;\n  border-left-width: 1px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 1px;\n  border-right-color: #D3D3D3;\n}\n\n#rguwpchrdi .gt_col_heading {\n  color: #333333;\n  background-color: #FFFFFF;\n  font-size: 100%;\n  font-weight: normal;\n  text-transform: inherit;\n  border-left-style: none;\n  border-left-width: 1px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 1px;\n  border-right-color: #D3D3D3;\n  vertical-align: bottom;\n  padding-top: 5px;\n  padding-bottom: 6px;\n  padding-left: 5px;\n  padding-right: 5px;\n  overflow-x: hidden;\n}\n\n#rguwpchrdi .gt_column_spanner_outer {\n  color: #333333;\n  background-color: #FFFFFF;\n  font-size: 100%;\n  font-weight: normal;\n  text-transform: inherit;\n  padding-top: 0;\n  padding-bottom: 0;\n  padding-left: 4px;\n  padding-right: 4px;\n}\n\n#rguwpchrdi .gt_column_spanner_outer:first-child {\n  padding-left: 0;\n}\n\n#rguwpchrdi .gt_column_spanner_outer:last-child {\n  padding-right: 0;\n}\n\n#rguwpchrdi .gt_column_spanner {\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n  vertical-align: bottom;\n  padding-top: 5px;\n  padding-bottom: 5px;\n  overflow-x: hidden;\n  display: inline-block;\n  width: 100%;\n}\n\n#rguwpchrdi .gt_spanner_row {\n  border-bottom-style: hidden;\n}\n\n#rguwpchrdi .gt_group_heading {\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n  color: #333333;\n  background-color: #FFFFFF;\n  font-size: 100%;\n  font-weight: initial;\n  text-transform: inherit;\n  border-top-style: solid;\n  border-top-width: 2px;\n  border-top-color: #D3D3D3;\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n  border-left-style: none;\n  border-left-width: 1px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 1px;\n  border-right-color: #D3D3D3;\n  vertical-align: middle;\n  text-align: left;\n}\n\n#rguwpchrdi .gt_empty_group_heading {\n  padding: 0.5px;\n  color: #333333;\n  background-color: #FFFFFF;\n  font-size: 100%;\n  font-weight: initial;\n  border-top-style: solid;\n  border-top-width: 2px;\n  border-top-color: #D3D3D3;\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n  vertical-align: middle;\n}\n\n#rguwpchrdi .gt_from_md > :first-child {\n  margin-top: 0;\n}\n\n#rguwpchrdi .gt_from_md > :last-child {\n  margin-bottom: 0;\n}\n\n#rguwpchrdi .gt_row {\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n  margin: 10px;\n  border-top-style: solid;\n  border-top-width: 1px;\n  border-top-color: #D3D3D3;\n  border-left-style: none;\n  border-left-width: 1px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 1px;\n  border-right-color: #D3D3D3;\n  vertical-align: middle;\n  overflow-x: hidden;\n}\n\n#rguwpchrdi .gt_stub {\n  color: #333333;\n  background-color: #FFFFFF;\n  font-size: 100%;\n  font-weight: initial;\n  text-transform: inherit;\n  border-right-style: solid;\n  border-right-width: 2px;\n  border-right-color: #D3D3D3;\n  padding-left: 5px;\n  padding-right: 5px;\n}\n\n#rguwpchrdi .gt_stub_row_group {\n  color: #333333;\n  background-color: #FFFFFF;\n  font-size: 100%;\n  font-weight: initial;\n  text-transform: inherit;\n  border-right-style: solid;\n  border-right-width: 2px;\n  border-right-color: #D3D3D3;\n  padding-left: 5px;\n  padding-right: 5px;\n  vertical-align: top;\n}\n\n#rguwpchrdi .gt_row_group_first td {\n  border-top-width: 2px;\n}\n\n#rguwpchrdi .gt_row_group_first th {\n  border-top-width: 2px;\n}\n\n#rguwpchrdi .gt_summary_row {\n  color: #333333;\n  background-color: #FFFFFF;\n  text-transform: inherit;\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n}\n\n#rguwpchrdi .gt_first_summary_row {\n  border-top-style: solid;\n  border-top-color: #D3D3D3;\n}\n\n#rguwpchrdi .gt_first_summary_row.thick {\n  border-top-width: 2px;\n}\n\n#rguwpchrdi .gt_last_summary_row {\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n}\n\n#rguwpchrdi .gt_grand_summary_row {\n  color: #333333;\n  background-color: #FFFFFF;\n  text-transform: inherit;\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n}\n\n#rguwpchrdi .gt_first_grand_summary_row {\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n  border-top-style: double;\n  border-top-width: 6px;\n  border-top-color: #D3D3D3;\n}\n\n#rguwpchrdi .gt_last_grand_summary_row_top {\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n  border-bottom-style: double;\n  border-bottom-width: 6px;\n  border-bottom-color: #D3D3D3;\n}\n\n#rguwpchrdi .gt_striped {\n  background-color: rgba(128, 128, 128, 0.05);\n}\n\n#rguwpchrdi .gt_table_body {\n  border-top-style: solid;\n  border-top-width: 2px;\n  border-top-color: #D3D3D3;\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n}\n\n#rguwpchrdi .gt_footnotes {\n  color: #333333;\n  background-color: #FFFFFF;\n  border-bottom-style: none;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n  border-left-style: none;\n  border-left-width: 2px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 2px;\n  border-right-color: #D3D3D3;\n}\n\n#rguwpchrdi .gt_footnote {\n  margin: 0px;\n  font-size: 90%;\n  padding-top: 4px;\n  padding-bottom: 4px;\n  padding-left: 5px;\n  padding-right: 5px;\n}\n\n#rguwpchrdi .gt_sourcenotes {\n  color: #333333;\n  background-color: #FFFFFF;\n  border-bottom-style: none;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n  border-left-style: none;\n  border-left-width: 2px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 2px;\n  border-right-color: #D3D3D3;\n}\n\n#rguwpchrdi .gt_sourcenote {\n  font-size: 90%;\n  padding-top: 4px;\n  padding-bottom: 4px;\n  padding-left: 5px;\n  padding-right: 5px;\n}\n\n#rguwpchrdi .gt_left {\n  text-align: left;\n}\n\n#rguwpchrdi .gt_center {\n  text-align: center;\n}\n\n#rguwpchrdi .gt_right {\n  text-align: right;\n  font-variant-numeric: tabular-nums;\n}\n\n#rguwpchrdi .gt_font_normal {\n  font-weight: normal;\n}\n\n#rguwpchrdi .gt_font_bold {\n  font-weight: bold;\n}\n\n#rguwpchrdi .gt_font_italic {\n  font-style: italic;\n}\n\n#rguwpchrdi .gt_super {\n  font-size: 65%;\n}\n\n#rguwpchrdi .gt_footnote_marks {\n  font-size: 75%;\n  vertical-align: 0.4em;\n  position: initial;\n}\n\n#rguwpchrdi .gt_asterisk {\n  font-size: 100%;\n  vertical-align: 0;\n}\n\n#rguwpchrdi .gt_indent_1 {\n  text-indent: 5px;\n}\n\n#rguwpchrdi .gt_indent_2 {\n  text-indent: 10px;\n}\n\n#rguwpchrdi .gt_indent_3 {\n  text-indent: 15px;\n}\n\n#rguwpchrdi .gt_indent_4 {\n  text-indent: 20px;\n}\n\n#rguwpchrdi .gt_indent_5 {\n  text-indent: 25px;\n}\n</style>\n<table class=\"gt_table\" data-quarto-disable-processing=\"false\" data-quarto-bootstrap=\"false\">\n  <thead>\n    \n    <tr class=\"gt_col_headings\">\n      <th class=\"gt_col_heading gt_columns_bottom_border gt_left\" rowspan=\"1\" colspan=\"1\" scope=\"col\" id=\"&lt;strong&gt;Characteristic&lt;/strong&gt;\"><strong>Characteristic</strong></th>\n      <th class=\"gt_col_heading gt_columns_bottom_border gt_center\" rowspan=\"1\" colspan=\"1\" scope=\"col\" id=\"&lt;strong&gt;Overall&lt;/strong&gt;, N = 200&lt;span class=&quot;gt_footnote_marks&quot; style=&quot;white-space:nowrap;font-style:italic;font-weight:normal;&quot;&gt;&lt;sup&gt;1&lt;/sup&gt;&lt;/span&gt;\"><strong>Overall</strong>, N = 200<span class=\"gt_footnote_marks\" style=\"white-space:nowrap;font-style:italic;font-weight:normal;\"><sup>1</sup></span></th>\n      <th class=\"gt_col_heading gt_columns_bottom_border gt_center\" rowspan=\"1\" colspan=\"1\" scope=\"col\" id=\"&lt;strong&gt;Active&lt;/strong&gt;, N = 79&lt;span class=&quot;gt_footnote_marks&quot; style=&quot;white-space:nowrap;font-style:italic;font-weight:normal;&quot;&gt;&lt;sup&gt;1&lt;/sup&gt;&lt;/span&gt;\"><strong>Active</strong>, N = 79<span class=\"gt_footnote_marks\" style=\"white-space:nowrap;font-style:italic;font-weight:normal;\"><sup>1</sup></span></th>\n      <th class=\"gt_col_heading gt_columns_bottom_border gt_center\" rowspan=\"1\" colspan=\"1\" scope=\"col\" id=\"&lt;strong&gt;Placebo&lt;/strong&gt;, N = 121&lt;span class=&quot;gt_footnote_marks&quot; style=&quot;white-space:nowrap;font-style:italic;font-weight:normal;&quot;&gt;&lt;sup&gt;1&lt;/sup&gt;&lt;/span&gt;\"><strong>Placebo</strong>, N = 121<span class=\"gt_footnote_marks\" style=\"white-space:nowrap;font-style:italic;font-weight:normal;\"><sup>1</sup></span></th>\n    </tr>\n  </thead>\n  <tbody class=\"gt_table_body\">\n    <tr><td headers=\"label\" class=\"gt_row gt_left\">hypertension</td>\n<td headers=\"stat_0\" class=\"gt_row gt_center\">101 (50%)</td>\n<td headers=\"stat_1\" class=\"gt_row gt_center\">38 (48%)</td>\n<td headers=\"stat_2\" class=\"gt_row gt_center\">63 (52%)</td></tr>\n    <tr><td headers=\"label\" class=\"gt_row gt_left\">diabetes</td>\n<td headers=\"stat_0\" class=\"gt_row gt_center\">23 (12%)</td>\n<td headers=\"stat_1\" class=\"gt_row gt_center\">9 (11%)</td>\n<td headers=\"stat_2\" class=\"gt_row gt_center\">14 (12%)</td></tr>\n    <tr><td headers=\"label\" class=\"gt_row gt_left\">civil</td>\n<td headers=\"stat_0\" class=\"gt_row gt_center\"></td>\n<td headers=\"stat_1\" class=\"gt_row gt_center\"></td>\n<td headers=\"stat_2\" class=\"gt_row gt_center\"></td></tr>\n    <tr><td headers=\"label\" class=\"gt_row gt_left\">    alone</td>\n<td headers=\"stat_0\" class=\"gt_row gt_center\">59 (30%)</td>\n<td headers=\"stat_1\" class=\"gt_row gt_center\">22 (28%)</td>\n<td headers=\"stat_2\" class=\"gt_row gt_center\">37 (31%)</td></tr>\n    <tr><td headers=\"label\" class=\"gt_row gt_left\">    partner</td>\n<td headers=\"stat_0\" class=\"gt_row gt_center\">141 (70%)</td>\n<td headers=\"stat_1\" class=\"gt_row gt_center\">57 (72%)</td>\n<td headers=\"stat_2\" class=\"gt_row gt_center\">84 (69%)</td></tr>\n  </tbody>\n  \n  <tfoot class=\"gt_footnotes\">\n    <tr>\n      <td class=\"gt_footnote\" colspan=\"4\"><span class=\"gt_footnote_marks\" style=\"white-space:nowrap;font-style:italic;font-weight:normal;\"><sup>1</sup></span> n (%)</td>\n    </tr>\n  </tfoot>\n</table>\n</div>\n```\n:::\n:::\n\n\nThe next element is a figure showcasing the `grottaBar()` function.\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code  code-summary=\"Printing Figure 1\"}\nprint(lst$`Figure 1`)\n```\n\n::: {.cell-output-display}\n![](stRoke_files/figure-html/generic_stroke-grotta-1.png){fig-align='center' width=960}\n:::\n:::\n\n\nThe function has been expanded lately to allow further customisation. The `generic_stroke()` uses the default implementation.\n\nThe last element is the only original part of the implementation. This is a horizontal forest plot of regression analysis values from the `ci_plot()` function, which plots model coefficients with confidence intervals based on a supplied model. Supports binary and ordinal logistic regression and other functions formatted in a similar way.\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code  code-summary=\"Printing Figure 2\"}\nprint(lst$`Figure 2`)\n```\n\n::: {.cell-output-display}\n![](stRoke_files/figure-html/generic_stroke-ci-1.png){fig-align='center' width=960}\n:::\n:::\n\n\nThe output is a ggplot-element and is highly modifiable.\n",
    "supporting": [
      "stRoke_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}